pipeline {
    agent { label 'java-agent' }

    environment {
        GIT_REPO = 'https://github.com/Anvesh-ansh259/pipeline-project.git'
        BRANCH   = 'main'
    }

    stages {

        stage('Clean Workspace') {
            steps {
                echo 'Cleaning workspace...'
                deleteDir()
            }
        }

        stage('Checkout') {
            steps {
                echo "Cloning the repo from GitHub..."
                git branch: "${BRANCH}", url: "${GIT_REPO}"
            }
        }

        stage('Build WAR') {
            steps {
                dir('new-java-project') {
                    echo 'Building WAR file with Maven...'
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                sshagent(['ec2-ssh-key']) {
                    echo 'Deploying WAR to Tomcat...'
                    sh '''
                        WAR_FILE=new-java-project/target/new-java-project-1.0-SNAPSHOT.war

                        # Copy WAR to remote server
                        scp -o StrictHostKeyChecking=no $WAR_FILE ec2-user@54.227.175.225:/home/ec2-user/

                        # Deploy WAR on remote Tomcat
                        ssh -o StrictHostKeyChecking=no ec2-user@54.227.175.225 << 'EOF'
TOMCAT_HOME=/home/ec2-user/tomcat10
echo "Stopping Tomcat if running..."
$TOMCAT_HOME/bin/shutdown.sh || true
sleep 5
echo "Removing old WAR and deploying new one..."
rm -rf $TOMCAT_HOME/webapps/new-java-project*
mv /home/ec2-user/new-java-project-1.0-SNAPSHOT.war $TOMCAT_HOME/webapps/
echo "Starting Tomcat..."
$TOMCAT_HOME/bin/startup.sh
echo "Deployment completed."
EOF
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs!'
        }
    }
}
